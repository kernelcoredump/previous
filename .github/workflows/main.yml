# TODO: https://github.com/GitTools/GitVersion/issues/2421

on:
  push:
    branches:
    - feature/*
    - master

jobs:
  build:
    name: Build RaspberryPi application
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # check performance of increases in the commit depth
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.4
      with:
        versionSpec: 5.3.x
    - name: Use GitVersion
      uses: gittools/actions/gitversion/execute@v0.9.4
      id:   gitversion

    - name: Build
      uses: docker://ghcr.io/kernelcoredump/previous-builder:latest
      with:
        # mount $GITHUB_WORKSPACE to /work or just use the mounted /github/workspace
        # workdir is automatically set to /github/workspace
        args: "/crosstools-build.sh"

    - name: Build AppImage
      uses: docker://appimagecrafters/appimage-builder:latest
      id:   appimage
      env:
        APP_VERSION: ${{ steps.gitversion.outputs.SemVer }}
      with:
        args: /bin/bash -c "appimage-builder --recipe ./AppImageBuilder.yml --skip-test && echo ::set-output name=appimage_file::$(ls *.AppImage)"

    - name: Create package
      run: tar -cf previous-RPiOS.tar -C $GITHUB_WORKSPACE/build/dist .

    - name: Publish package
      uses: actions/upload-artifact@v2
      with:
        name: previous-RPiOS
        path: previous-RPiOS.tar

    - name: Publish AppImage
      uses: actions/upload-artifact@v2
      with:
        name: AppImage
        path: ${{ steps.appimage.outputs.appimage_file }}

    - name: Create Release
      id:   create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name:     v${{ steps.gitversion.outputs.SemVer }}
        release_name: Release ${{ steps.gitversion.outputs.SemVer }}
        prerelease:   true
        draft:        true

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ${{ steps.appimage.outputs.appimage_file }}
        asset_name: ${{ steps.appimage.outputs.appimage_file }}
        asset_content_type: application/octet-stream
