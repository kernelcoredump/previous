on:
  push:
    branches:
    - feature/*
    - master

jobs:
  setVersion:
    name: Set version
    runs-on: 'ubuntu-latest'
    outputs:
      SemVer: ${{ steps.gitversion.outputs.SemVer }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # check performance of increases in the commit depth
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.4
      with:
        versionSpec: 5.3.x
    # TODO: https://github.com/GitTools/GitVersion/issues/2421
    - name: Use GitVersion
      uses: gittools/actions/gitversion/execute@v0.9.4
      id:   gitversion

  buildRPi:
    name: Build RaspberryPi application
    needs: setVersion
    runs-on: 'ubuntu-latest'
    env:
      SEMVER: ${{ needs.setVersion.outputs.SemVer }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build
      uses: docker://ghcr.io/kernelcoredump/previous-builder-armhf:latest
      with:
        # mount $GITHUB_WORKSPACE to /work or just use the mounted /github/workspace
        # workdir is automatically set to /github/workspace
        args: "/crosstools-build.sh"

    - name: Build AppImage
      uses: docker://appimagecrafters/appimage-builder:0.8.2
      id:   appimage
      env:
        APP_VERSION: ${{ env.SEMVER }}
      with:
        args: /bin/bash -c "appimage-builder --recipe ./AppImageBuilder.armhf.yml --skip-test && echo ::set-output name=appimage_file::$(ls *.AppImage)"

    - name: Publish AppImage
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: ${{ steps.appimage.outputs.appimage_file }}
    #- name: Create package
    #  run: tar -cf previous-RPiOS.tar -C $GITHUB_WORKSPACE/build/dist .
    #
    #- name: Publish package
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: previous-RPiOS
    #    path: previous-RPiOS.tar
    #
    #- name: Create Release
    #  id:   create-release
    #  uses: actions/create-release@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    tag_name:     v${{ needs.setVersion.outputs.SemVer }}
    #    release_name: Release ${{ needs.setVersion.outputs.SemVer }}
    #    prerelease:   true
    #    draft:        true
    #
    #- name: Upload Release Asset
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    upload_url: ${{ steps.create-release.outputs.upload_url }}
    #    asset_path: ${{ steps.appimage.outputs.appimage_file }}
    #    asset_name: ${{ steps.appimage.outputs.appimage_file }}
    #    asset_content_type: application/octet-stream

  buildLinux:
    name: Build Linux x86_64 application
    needs: setVersion
    runs-on: 'ubuntu-latest'
    env:
      SEMVER: ${{ needs.setVersion.outputs.SemVer }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Build
      uses: ./.github/actions/linuxbuilder
      with:
        args: "/build.sh"

    - name: Build AppImage
      uses: docker://appimagecrafters/appimage-builder:0.8.2
      id:   appimage
      env:
        APP_VERSION: ${{ env.SEMVER }}
      with:
        args: /bin/bash -c "appimage-builder --recipe ./AppImageBuilder.x86_64.yml --skip-test && echo ::set-output name=appimage_file::$(ls *.AppImage)"

    - name: Publish AppImage
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: ${{ steps.appimage.outputs.appimage_file }}

  buildWindows:
    name: Build Windows application
    needs: setVersion
    runs-on: 'windows-latest'
    env:
      SEMVER: ${{ needs.setVersion.outputs.SemVer }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Find packages file
      id: findPackagesFile
      run: |
        echo "::set-output name=PackagesFile::${{ github.workspace }}/vcpkg-packages.x64-windows.txt"

    - name: Run vcpkg
      uses: lukka/run-vcpkg@v4
      with:
        vcpkgArguments: '@${{ github.workspace }}/vcpkg-packages.x64-windows.txt'
        vcpkgGitCommitId: 50a596c40a07afc7588f12f86f276581a60cba94
        appendedCacheKey: ${{ hashFiles('${{ github.workspace }}/vcpkg-packages.x64-windows.txt') }}
    #- run: |
    #    $VCPKG_ROOT/vcpkg install @vcpkg-packages.x64-windows.txt
    #

    - name: Run CMake
      uses: lukka/run-cmake@v3
      with:
        cmakeGenerator: VS16Win64
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeBuildType: Release
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        cmakeAppendedArgs: '-DCMAKE_POLICY_DEFAULT_CMP0087=NEW'
        useVcpkgToolchainFile: true
        buildDirectory: '${{ runner.workspace }}/build'
        buildWithCMake: true
        buildWithCMakeArgs: '--config Release'

    - name: Add Developer Command Prompt tools to PATH
      uses: ilammy/msvc-dev-cmd@v1

    - name: Create package
      run: |
        cmake --install ${{ runner.workspace }}/build --prefix ${{ runner.workspace }}/build/dist
        7z a PreviousEmulator-${{ env.SEMVER }}.x64-windows.zip ${{ runner.workspace }}/build/dist/*

    - name: Publish application
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: 'PreviousEmulator-${{ env.SEMVER }}.x64-windows.zip'

  releasePackages:
    name: Release packages
    needs: [ setVersion, buildRPi, buildLinux, buildWindows ]
    if: github.ref == 'refs/heads/master'
    runs-on: 'ubuntu-latest'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SEMVER: ${{ needs.setVersion.outputs.SemVer }}
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: packages

    - name: Create Release
      id:   createRelease
      uses: actions/create-release@v1
      with:
        tag_name:     v${{ env.SEMVER }}
        release_name: Release ${{ env.SEMVER }}
        prerelease:   true
        draft:        true

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.createRelease.outputs.upload_url }}
        asset_path: 'PreviousEmulator-${{ env.SEMVER }}-armhf.AppImage'
        asset_name: 'PreviousEmulator-${{ env.SEMVER }}-armhf.AppImage'
        asset_content_type: application/octet-stream

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.createRelease.outputs.upload_url }}
        asset_path: 'PreviousEmulator-${{ env.SEMVER }}-x86_64.AppImage'
        asset_name: 'PreviousEmulator-${{ env.SEMVER }}-x86_64.AppImage'
        asset_content_type: application/octet-stream

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.createRelease.outputs.upload_url }}
        asset_path: 'PreviousEmulator-${{ env.SEMVER }}.x64-windows.zip'
        asset_name: 'PreviousEmulator-${{ env.SEMVER }}.x64-windows.zip'
        asset_content_type: application/zip
